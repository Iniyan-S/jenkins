pipeline {
    agent none
    environment {
        BIT_BUCKET=credentials('bitbucket-app-password')
        CREDS = credentials('awscli-creds')
        REGION = "ap-south-1"
    }
    
    stages {
        stage('Clone Repo') {
            agent {
                dockerfile {
                    filename 'Dockerfile'
                    dir 'docker-as-agent-test'
                }
            }

            steps {
                // https://stackoverflow.com/questions/39886995/how-to-access-bitbucket-using-app-password
                sh 'git clone https://$BIT_BUCKET_USR:$BIT_BUCKET_PSW@bitbucket.org/iniyan-s/java-static-webapp.git'
            }
        }

        stage('Maven Build') {
            agent {
                docker {image 'maven:3.6.3-jdk-11-slim'}
            }

            steps {
                sh 'mvn clean package -f java-static-webapp/webapp/pom.xml'
            }
        }

        stage('Deploy Artifact to S3') {
            
            agent {
                dockerfile {
                    filename 'Dockerfile-AWS-CLI'
                    dir 'docker-as-agent-test'
                    //args '--env AWS_ACCESS_KEY_ID=$CREDS_USR --env AWS_SECRET_ACCESS_KEY=$CREDS_PSW'
                }
            }

            steps {
                // Below S3 bucket has a cutom S3 bucket policy to allow upload from docker running host IP.
                //withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'aws-cli-creds', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) { 
                    sh '''
                        AWS_ACCESS_KEY_ID=$CREDS_USR
                        AWS_SECRET_ACCESS_KEY=$CREDS_PSW
                        AWS_DEFAULT_REGION=$REGION
                        aws s3 cp java-static-webapp/webapp/target/*.war s3://artifacts.devopsguru.club/
                        '''
                //}
            }
        }

        stage('Clean Up') {
            agent {label 'test-node'} // Where the job is running, docker host.

            steps {
                deleteDir() // deleteDir: Recursively delete the current directory from the workspace (https://www.jenkins.io/doc/pipeline/steps/workflow-basic-steps/#deletedir-recursively-delete-the-current-directory-from-the-workspace)
            }
        }

    }
}